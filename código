#include <iostream>
#include <locale.h>
#include <algorithm>
using namespace std;


#define MAX 5

struct Pilha {
	int qtde;
	float elementos[MAX];
};


Pilha* init() {
	Pilha *p = new Pilha();
	p->qtde = 0;
	return p;
}

int RecebeValores (Pilha *p){
    int v=-1, teste, n;
	
		
		while(v == -1 || valor <= p->elementos[p->qtd-1]){
			
			cout << n << "º valor: "<< endl;
			cin >> v;
			n++;
			
			if (cont > v){
			cout << "O próximo valor deve ser sempre maior que o anterior. Escreva novamente: " << endl;
			cin >> v;
			}
		}
    
}

void MostraValores(Pilha *p){
	int i;
	
	for(int i=p->qtde-1; i>=0; --i) {
		cout << p->elementos[i] << endl;
	}
	cout << "----------------------" << endl;
	
}

int push(Pilha *p, float v) {
	int podeEmpilhar = (p->qtde < MAX);
	if (podeEmpilhar) {
		p->elementos[p->qtde++] = v;
	}
	return podeEmpilhar;
}

int main(int argc, char** argv){
	
	Pilha *pilhaFloat;
	pilhaFloat = new Pilha();
	pilhaFloat = init();
	
	cout<<"---------------------" << endl;
	cout<<"| Escreva 30 números |"<< endl;
	cout<<"---------------------" << endl;
	
	RecebeValores(pilhaFloat);
	
	MostraValores(pilhaFloat);

	
	
}
